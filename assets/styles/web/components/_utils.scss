/* #region Width */
.wd{
    @each $class, $value in $sizesValues {
        &-#{$class} {
          @include sizeType('width', $value);
        }
    }
}

.min-wd{
    @each $class, $value in $sizesValues {
        &-#{$class} {
          @include sizeType('min-width', $value);
        }
    }
}

.max-wd{
    @each $class, $value in $sizesValues {
        &-#{$class} {
          @include sizeType('max-width', $value);
        }
    }
}
/* #endregion Width */


/* #region Height */
.ht{
    @each $class, $value in $sizesValues {
        &-#{$class} {
          @include sizeType('height', $value);
        }
    }
}

.min-ht{
    @each $class, $value in $sizesValues {
        &-#{$class} {
          @include sizeType('min-height', $value);
        }
    }
}

.max-ht{
    @each $class, $value in $sizesValues {
        &-#{$class} {
          @include sizeType('max-height', $value);
        }
    }
}
/* #endregion Height */


/* #region Border */
.border{
    &-all{
        border: 1px solid grey;
        &-no{
            @include borderResp(0, null);
        }
        &-on{
            @include borderResp(1, null);
        }
    }
    &-top{
        border-top: 1px solid grey;
        &-no{
            @include borderResp(0, top);
        }
        &-on{
            @include borderResp(1, top);
        }
    }
    &-bottom{
        border-bottom: 1px solid grey;
        &-no{
            @include borderResp(0, bottom);
        }
        &-on{
            @include borderResp(1, bottom);
        }
    }
    &-left{
        border-left: 1px solid grey;
        &-no{
            @include borderResp(0, left);
        }
        &-on{
            @include borderResp(1, left);
        }
    }
    &-right{
        border-right: 1px solid grey;
        &-no{
            @include borderResp(0, right);
        }
        &-on{
            @include borderResp(1, right);
        }
    }
}
/* #endregion Border */


/* #region Position */
.position{
    $positions: (
        static: static,
        fixed: fixed,
        absolute: absolute,
        relative: relative
    );
    @each $class, $value in $positions {
        &-#{$class} {
            @include positionInit($value);
        }
    }
}
/* #endregion Position */


/* #region Text */
.text{
    &-left{
        text-align: left
    }
    &-center{
        text-align: center
    }
    &-right{
        text-align: right
    }
    &-justify{
        text-align: justify
    }
    &-capitalize{
        text-transform: capitalize
    }
    &-lowercase{
        text-transform: lowercase
    }
    &-uppercase{
      text-transform: uppercase
  }
}
/* #endregion Text */


/* #region Margin / Padding */
.padding{
    @include margeType('padding');
}

.margin{
    @include margeType('margin');
}
/* #endregion Margin / Padding */


/* #region Display */
.d{
    @each $class, $value in $displayValues {
        &-#{$class} {
            @include displayInit($value);
        }
    }
}
/* #endregion Display */